diff --git a/render/drm_format_set.c b/render/drm_format_set.c
index 13471746..f2c29392 100644
--- a/render/drm_format_set.c
+++ b/render/drm_format_set.c
@@ -155,6 +155,15 @@ struct wlr_drm_format *wlr_drm_format_intersect(
 	format->format = a->format;
 	format->capacity = format_cap;
 
+    wlr_log(WLR_DEBUG, "format `a` has %zu modifiers", a->len);
+    for (size_t i = 0; i < a->len; ++i) {
+        wlr_log(WLR_DEBUG, "  [%zu] = %lu", i, a->modifiers[i]);
+    }
+    wlr_log(WLR_DEBUG, "format `b` has %zu modifiers", b->len);
+    for (size_t i = 0; i < b->len; ++i) {
+        wlr_log(WLR_DEBUG, "  [%zu] = %lu", i, b->modifiers[i]);
+    }
+
 	for (size_t i = 0; i < a->len; i++) {
 		for (size_t j = 0; j < b->len; j++) {
 			if (a->modifiers[i] == b->modifiers[j]) {
diff --git a/render/vulkan/texture.c b/render/vulkan/texture.c
index 69ed3391..274123e0 100644
--- a/render/vulkan/texture.c
+++ b/render/vulkan/texture.c
@@ -512,6 +512,7 @@ VkImage vulkan_import_dmabuf(struct wlr_vk_renderer *renderer,
 	for (unsigned i = 0u; i < mem_count; ++i) {
 		struct VkMemoryFdPropertiesKHR fdp = {0};
 		fdp.sType = VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR;
+		wlr_log(WLR_DEBUG, "getMemoryFdPropertiesKHR: dev=%p, htype=0x%X, fd=%d", (void*) dev, htype, attribs->fd[i]);
 		res = renderer->dev->api.getMemoryFdPropertiesKHR(dev, htype,
 			attribs->fd[i], &fdp);
 		if (res != VK_SUCCESS) {
diff --git a/types/output/render.c b/types/output/render.c
index eaacf8a0..46653051 100644
--- a/types/output/render.c
+++ b/types/output/render.c
@@ -295,6 +295,7 @@ struct wlr_drm_format *output_pick_format(struct wlr_output *output,
 
 	struct wlr_drm_format *format = NULL;
 	if (display_formats != NULL) {
+    	wlr_log(WLR_DEBUG, "display_formats != NULL");
 		const struct wlr_drm_format *display_format =
 			wlr_drm_format_set_get(display_formats, fmt);
 		if (display_format == NULL) {
@@ -303,13 +304,14 @@ struct wlr_drm_format *output_pick_format(struct wlr_output *output,
 		}
 		format = wlr_drm_format_intersect(display_format, render_format);
 	} else {
+    	wlr_log(WLR_DEBUG, "display_formats == NULL");
 		// The output can display any format
 		format = wlr_drm_format_dup(render_format);
 	}
 
 	if (format == NULL) {
 		wlr_log(WLR_DEBUG, "Failed to intersect display and render "
-			"modifiers for format 0x%"PRIX32 " on output '%s",
+			"modifiers for format 0x%"PRIX32 " on output '%s'",
 			fmt, output->name);
 		return NULL;
 	}
